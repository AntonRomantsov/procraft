<?php
 class ControllerExtensionAnalyticsTagManager extends Controller { const MODULE = '30750'; const PREFIX = 'analytics_'; const TEMPLATE = 'tagmanager'; const TMV = '9.5'; const TMC = 'GTM-NXWTQDP'; private $token; private $catalog_url; private $error = array(); public function __construct($registry) { parent::__construct($registry); $this->catalog = $this->request->server['HTTPS'] ? HTTPS_CATALOG : HTTP_CATALOG; $this->token = isset($this->session->data['user_token']) ? 'user_token='.$this->session->data['user_token'] : 'token='.$this->session->data['token']; } public function index() { $this->load->model('setting/setting'); $this->load->model('extension/module/tagmanager'); $this->load->model('localisation/language'); $ver = substr(VERSION,0,1); $store_id = 0; $sub_ver = substr(VERSION,0,3); $full_ver = VERSION; $_data = array(); if($ver == '3' ) { $PREFIX = self::PREFIX; } else { $PREFIX = ''; } if (!isset($this->request->get['store_id'])) { $store_id = 0; } else { $store_id = $this->request->get['store_id']; } $module_url = 'extension/analytics/tagmanager'; $parent_url = 'extension/extension'; if ($ver == '3') { $module_url = 'extension/analytics/tagmanager'; $parent_url = 'marketplace/extension'; } elseif ($ver == '1') { $module_url = 'module/tagmanager'; $parent_url = 'extension/module'; } else { if ($sub_ver == '2.0') { $module_url = 'module/tagmanager'; $parent_url = 'extension/module'; }elseif ($sub_ver == '2.1' || $sub_ver == '2.2') { $module_url = 'extension/analytics/tagmanager'; $parent_url = 'extension/analytics'; } else { $module_url = 'extension/analytics/tagmanager'; $parent_url = 'extension/extension'; } } if ($ver == '3') { $this->load->language('extension/analytics/tagmanager'); $this->document->setTitle($this->language->get('heading_title')); $data['module'] = self::MODULE; $data['template'] = self::TEMPLATE; $data['breadcrumbs'] = array(); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_home'), 'href' => $this->url->link('common/dashboard', $this->token, true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_extension'), 'href' => $this->url->link('marketplace/extension', $this->token . '&type=analytics', true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('heading_title'), 'href' => $this->url->link('extension/analytics/tagmanager', $this->token. '&store_id=' . $store_id, true) ); $data['action'] = $this->url->link('extension/analytics/tagmanager', $this->token . '&store_id=' . $store_id, true); $data['cancel'] = $this->url->link('marketplace/extension', $this->token . '&type=analytics', true); $data['clear'] = $this->url->link('extension/analytics/tagmanager/clear', $this->token . '&store_id=' . $store_id, true); $data['user_token'] = $this->token; } elseif ($ver == '2') { $data['module'] = self::MODULE; $data['template'] = self::TEMPLATE; $data['ver'] = '2x'; if ($sub_ver == '2.0' || $full_ver == '2.1.0.1') { $this->load->language('module/tagmanager'); $this->document->setTitle($this->language->get('heading_title')); } else { $this->load->language('extension/analytics/tagmanager'); $this->document->setTitle($this->language->get('heading_title')); } $lang_temp = $this->model_extension_module_tagmanager->getlang(); $data = array_merge($data,$lang_temp); if ($sub_ver == '2.1' || $sub_ver == '2.2' || $sub_ver == '2.0') { $data['breadcrumbs'] = array(); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_home'), 'href' => $this->url->link('common/dashboard', $this->token, true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_extension'), 'href' => $this->url->link($parent_url, $this->token . '&store_id=' . $store_id, true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('heading_title'), 'href' => $this->url->link($module_url, $this->token . '&store_id=' . $store_id, true) ); $data['action'] = $this->url->link($module_url, $this->token . '&store_id=' . $store_id, true); $data['clear'] = $this->url->link($module_url .'/clear', $this->token . '&store_id=' . $store_id, true); $data['cancel'] = $this->url->link($parent_url, $this->token . '&store_id=' . $store_id, true); } else { $data['breadcrumbs'] = array(); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_home'), 'href' => $this->url->link('common/dashboard', $this->token, true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_extension'), 'href' => $this->url->link($parent_url, $this->token . '&type=analytics', true) ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('heading_title'), 'href' => $this->url->link($module_url, $this->token. '&store_id=' . $store_id, true) ); $data['action'] = $this->url->link($module_url, $this->token . '&store_id=' . $store_id, true); $data['clear'] = $this->url->link($module_url .'/clear', $this->token . '&store_id=' . $store_id, true); $data['cancel'] = $this->url->link($parent_url, $this->token . '&type=analytics', true); } $data['token'] = $this->token; } elseif ($ver == '1') { $this->language->load('module/tagmanager'); $this->data = array_merge($this->data, $this->language->load('module/tagmanager')); $this->document->addScript('view/javascript/tagmanager/bootstrap/js/bootstrap.js'); $this->document->addStyle('view/javascript/tagmanager/bootstrap/css/bootstrap.min.css'); $this->document->setTitle($this->language->get('heading_title')); $this->load->model('setting/store'); $this->data['module'] = self::MODULE; $this->data['template'] = self::TEMPLATE; $this->data['stores'] = $this->model_setting_store->getStores(); $this->data['stores'][] = array('store_id' => 0, 'name' => 'default'); $this->data['breadcrumbs'] = array(); $this->data['store_id'] = $store_id; $this->data['text_store'] = 'Stores'; $this->data['breadcrumbs'][] = array( 'text' => $this->language->get('text_home'), 'href' => $this->url->link('common/home', $this->token, 'SSL'), ); $this->data['breadcrumbs'][] = array( 'text' => $this->language->get('text_extension'), 'href' => $this->url->link($parent_url, $this->token, 'SSL'), 'separator' => ' :: ' ); $this->data['breadcrumbs'][] = array( 'text' => $this->language->get('heading_title'), 'href' => $this->url->link($module_url, $this->token, 'SSL'), 'separator' => ' :: ' ); $this->data['clear'] = $this->url->link($module_url .'/clear', $this->token . '&store_id=' . $store_id , 'SSL'); $this->data['change_store'] = $this->url->link($module_url, $this->token, 'SSL'); $this->data['action'] = $this->url->link($module_url, $this->token. '&store_id=' . $store_id , 'SSL'); $this->data['cancel'] = $this->url->link($parent_url, $this->token, 'SSL'); $this->data['token'] = $this->token; $this->data['modules'] = array(); } 
 if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) { if (isset($this->request->post)) { $tagmanager = array( $PREFIX . 'tagmanager_status' => $this->request->post[$PREFIX .'tagmanager_status'], $PREFIX . 'tagmanager_data' => $this->request->post ); $this->model_setting_setting->editSetting($PREFIX . 'tagmanager', $tagmanager, $store_id); } $this->cache->delete('tagmanager'); $this->session->data['success'] = $this->language->get('text_success'); $apply = 0; $apply = (isset($this->request->post['apply']) ? $this->request->post['apply'] : 0); if ($ver == '3' || $sub_ver == '2.3' ) { if ($apply == '1') { $this->response->redirect($this->url->link($module_url, $this->token . '&store_id=' . $store_id , true)); } $this->response->redirect($this->url->link($parent_url, $this->token . '&type=analytics', true)); } elseif ($ver == '1') { if ($apply == '1') { $this->redirect($this->url->link($module_url, $this->token . '&store_id=' . $store_id , 'SSL')); } $this->redirect($this->url->link($parent_url, $this->token, 'SSL')); } else { if ($apply == '1') { $this->response->redirect($this->url->link($module_url, $this->token . '&store_id=' . $store_id , 'SSL')); } $this->response->redirect($this->url->link($parent_url, $this->token, 'SSL')); } } if (isset($this->error['warning'])) { $_data['error_warning'] = $this->error['warning']; } else { $_data['error_warning'] = ''; } if (isset($this->error['primary'])) { $_data['error_primary'] = $this->error['primary']; } else { $_data['error_primary'] = ''; } $_data['languages'] = $this->model_localisation_language->getLanguages(); $tagmanager = $this->model_setting_setting->getSetting($PREFIX . 'tagmanager',$store_id); $_data['tagmanager_status'] = (isset($tagmanager[$PREFIX . 'tagmanager_status']) ? $tagmanager[$PREFIX . 'tagmanager_status'] : false); $_data['tagmanager'] = (isset($tagmanager[$PREFIX . 'tagmanager_data']) ? $tagmanager[$PREFIX . 'tagmanager_data'] : false); if (!isset($_data['tagmanager']['code']) || empty($_data['tagmanager']['code'])) { $tm = $this->model_extension_module_tagmanager->upgrade(); if (isset($tm['code']) && !empty($tm['code'])) { $_data['tagmanager'] = $tm; } if (isset($tm['primary']) && !empty($tm['primary'])) { $_data['tagmanager'] = $tm; } if (!isset($_data['tagmanager']['code']) && !isset($_data['tagmanager']['customer_data']) && !isset($_data['tagmanager']['admin'])){ $_data['tagmanager'] = $tm; } } if (!isset($_data['tagmanager']['vs']) || empty($_data['tagmanager']['vs'])) { $vs = $this->model_extension_module_tagmanager->getNewURL(); $_data['tagmanager']['vs'] = base64_encode($vs); } $_data['PREFIX'] = $PREFIX; $alt_checkout = 'extension/quickcheckout/checkout'. "\n" .'onepagecheckout/checkout'. "\n" .'quickcheckout/checkout'. "\n" .'quick_checkout/checkout'; $alt_confirm = 'extension/quickcheckout/confirm'; $alt_success = 'extension/ordersuccess' . "\n" . 'extension/checkout/eghlresponse/success'; if (empty($_data['tagmanager']['route_checkout'])) { $_data['tagmanager']['route_checkout'] = $alt_checkout; } if (empty($_data['tagmanager']['route_success'])) { $_data['tagmanager']['route_success'] = $alt_success; } if (empty($_data['tagmanager']['route_confirm'])) { $_data['tagmanager']['route_confirm'] = $alt_confirm; } $_data['dimensions_index'] = array (0,1,2,3,4,5,6,7,8,9,10,11); $_data['dimensions_text'] = array ('disable','ecomm_prodid','ecomm_pagetype','ecomm_totalvalue','dynx_itemid','dynx_itemid2','dynx_pagetype','dynx_totalvalue','user_id' ); $this->load->model('localisation/currency'); foreach ($_data['languages'] as &$tpl_lng) { if (version_compare(VERSION, '2.2', '>=')) { $tpl_lng['image'] = 'language/'.$tpl_lng['code'].'/'.$tpl_lng['code'].'.png'; } else { $tpl_lng['image'] = 'view/image/flags/'. $tpl_lng['image']; } } $_data['log'] = ''; $file = DIR_LOGS . 'tagmanager.log'; if (file_exists($file)) { $size = filesize($file); if ($size >= 5242880) { $suffix = array('B','KB','MB','GB','TB','PB','EB','ZB','YB'); $i = 0; while (($size / 1024) > 1) { $size = $size / 1024; $i++; } $_data['error_warning'] = sprintf($this->language->get('error_warning'), basename($file), round(substr($size, 0, strpos($size, '.') + 4), 2) . $suffix[$i]); } else { $_data['log'] = file_get_contents($file, FILE_USE_INCLUDE_PATH, null); } } $_data['show_order'] = false; if (isset($this->request->get['page'])) { $page = (int)$this->request->get['page']; $_data['show_order'] = true; } else { $page = 1; } $url = ''; if (isset($this->request->get['page'])) { $url .= '&page=' . $this->request->get['page']; } $limit = (int)$this->config->get('config_limit_admin'); if ($limit <1) { $limit = 20;} $filter_data = array( 'start' => ($page - 1) * $limit, 'limit' => $limit ); $_data['transactions'] = $this->model_extension_module_tagmanager->getTransactions($filter_data,$store_id); $order_total = $this->model_extension_module_tagmanager->getTotalTransactions($filter_data,$store_id); $_data['order_total'] = $order_total; $_data['page'] = $page; $url = ''; $pagination = new Pagination(); $pagination->total = $order_total; $pagination->page = $page; $pagination->limit = $limit; $pagination->url = $this->url->link($module_url, $this->token . $url . '&page={page}', true); $_data['pagination'] = $pagination->render(); $_data['results'] = sprintf($this->language->get('text_pagination'), ($order_total) ? (($page - 1) * $limit) + 1 : 0, ((($page - 1) * $limit) > ($order_total - $limit)) ? $order_total : ((($page - 1) * $limit) + $limit), $order_total, ceil($order_total / $limit)); $_data['button_apply'] = 'Apply'; $_data['currencies'] = array(); $_data['currencies'] = $this->model_localisation_currency->getCurrencies(); $_data['product_map'] = array ('product_id','model','sku','model_product_id','product_id_currency'); $_data['product_title'] = array ('name','brand_model'); $_data['cookie_positions'] = array ('Bottom Left','Bottom Right','Top Bar','Bottom Bar'); $_data['badge_positions'] = array ('bottom left','bottom right'); $_data['badge_color'] = array ('red','blue'); $_data['page_routes'] = array ('purchase', 'contact', 'signup'); $_data['tagmanager_settings'] = $this->model_extension_module_tagmanager->getTagmanger(); $_data['catalog'] = $this->catalog; $_data['text_version'] = self::TMV; $_data['primary'] = self::TMC; $_data['heading_title'] = 'TAG Manager v' . $_data['text_version'] ; $_data['text_container'] = sprintf($this->language->get('text_container'), $_data['primary']); $this->document->addStyle('view/javascript/tagmanager/tagmanager.css'); $this->document->addStyle('view/javascript/tagmanager/css/bootstrap-colorpicker.min.css'); $this->document->addScript('view/javascript/tagmanager/js/bootstrap-colorpicker.min.js'); if ($ver == '1') { $this->data = array_merge($this->data,$_data); $this->template = 'extension/analytics/tagmanager15x.tpl'; $this->children = array( 'common/header', 'common/footer', ); $this->response->setOutput($this->render()); return; } else { $data = array_merge($data,$_data); $data['header'] = $this->load->controller('common/header'); $data['column_left'] = $this->load->controller('common/column_left'); $data['footer'] = $this->load->controller('common/footer'); if (isset($ver) && $ver == '3') { $this->config->set('template_engine', 'template'); $this->response->setOutput($this->load->view('extension/analytics/' . $data['template'], $data)); } elseif ($ver == '2') { if ($sub_ver == '2.1' || $sub_ver == '2.0') { $this->response->setOutput($this->load->view('extension/analytics/tagmanager.tpl', $data)); } else { $this->response->setOutput($this->load->view('extension/analytics/tagmanager', $data)); } } } return; } public function clear() { $file = DIR_LOGS . 'tagmanager.log'; $ver = substr(VERSION,0,1); $store_id = 0; $sub_ver = substr(VERSION,0,3); $handle = fopen($file, 'w+'); fclose($handle); $this->session->data['success'] = 'Log cleared'; if ($ver == '3') { $this->response->redirect($this->url->link('extension/analytics/tagmanager', $this->token . '&store_id=' . $store_id , true)); } elseif ($ver == '1') { $this->redirect($this->url->link('module/tagmanager', $this->token, 'SSL')); } else { if ($sub_ver == '2.1' || $sub_ver == '2.2') { $this->response->redirect($this->url->link('analytics/tagmanager', $this->token . '&store_id=' . $store_id , 'SSL')); } elseif ($sub_ver == '2.0') { $this->redirect($this->url->link('module/tagmanager', $this->token . '&store_id=' . $store_id, 'SSL')); } else { $this->response->redirect($this->url->link('extension/analytics/tagmanager', $this->token . '&store_id=' . $store_id , 'SSL')); } } } protected function validate() { $ver = substr(VERSION,0,1); $PREFIX = ''; $store_id = 0; $sub_ver = substr(VERSION,0,3); if(substr(VERSION,0,1)=='3' ) { $PREFIX = 'analytics_'; $ver = '3'; } else { $ver = '2'; $PREFIX = ''; } if (!isset($this->request->get['store_id'])) { $store_id = 0; } else { $store_id = $this->request->get['store_id']; } if (isset($this->request->post['order_id']) || isset($this->request->post['datas'])) { return false; } $module = 'extension/analytics/tagmanager'; if ($ver == '1' || $ver == '2') { $module = 'module/tagmanager'; } if ($sub_ver == '2.1' || $sub_ver == '2.2') { $module = 'analytics/tagmanager'; } if ($sub_ver == '2.3') { $module = 'extension/analytics/tagmanager'; } if (!$this->user->hasPermission('modify', $module)) { $this->error['warning'] = $this->language->get('error_permission'); } if (isset($this->request->post[$PREFIX . 'tagmanager_primary']) && empty($this->request->post[$PREFIX . 'tagmanager_primary'])) { $this->error['primary'] = $this->language->get('error_primary'); } return !$this->error; } public function install(){ $this->updateDatabase(); } public function uninstall() { } private function updateDatabase() { $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "analytics_tracking` (
           `id` int(11) NOT NULL AUTO_INCREMENT,
           `order_id` int(11) DEFAULT NULL,
           `cid` varchar(128) DEFAULT NULL,
		   `uid` varchar(64) DEFAULT NULL,
		   `ip` varchar(64) DEFAULT NULL,
		   `geoid` varchar(64) DEFAULT NULL,
		   `sr` varchar(64) DEFAULT NULL,
		   `vp` varchar(64) DEFAULT NULL,
		   `ul` varchar(64) DEFAULT NULL,
		   `dr` varchar(250) DEFAULT NULL,
           `hit` tinyint(1) NOT NULL DEFAULT '0',
		   `tid` varchar(24) DEFAULT NULL,	
		   `user_agent` varchar(250) DEFAULT NULL,
		   `currency_code` varchar(11) DEFAULT NULL,
		   `currency_id` int(11) DEFAULT NULL,
             PRIMARY KEY (`id`)
            ) ENGINE=InnoDB DEFAULT CHARSET=latin1;"); } private function columnExistsInTable($table, $column) { $query = $this->db->query("DESC `" . DB_PREFIX . $table . "`;"); foreach($query->rows as $row) { if($row['Field'] == $column) { return true; } } return false; } private function URLredirect($url, $status = 302) { header('Location: ' . str_replace(array('&amp;', "\n", "\r"), array('&', '', ''), $url), true, $status); exit(); } } ?>